[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Optimap Prime <info@optimaprime.be>"]
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
fastapi = "^0.115.8"
uvicorn = { extras = ["standard"], version = "^0.34.0" }
gunicorn = "^23.0.0"
sqlalchemy = "^2.0.39"
alembic = "^1.14.1"
bcrypt = "^4.2.1"
psycopg2-binary = "^2.9.10"
pydantic = "^2.10.6"
python-multipart = "^0.0.20"
genson = "^1.3.0"
fastapi-mail = "^1.4.0"
pyjwt = "^2.10.1"
cryptography = "^44.0.2"
aiofiles = "^24.1.0"
websocket = "^0.2.1"
faker = "^37.1.0"
slowapi = "^0.1.9"
jsonata-python = "^0.5.3"
lxml = "^5.3.2"
lxml-stubs = "^0.5.1"
respx = "^0.22.0"
jsonschema = "^4.23.0"
asyncpg = "^0.30.0"
types-jsonschema = "^4.23.0.20241208"
rich = "^14.0.0"
pytest-cov = "^6.1.1"
types-aiofiles = "^24.1.0.20250516"
apscheduler = "^3.11.0"
aiohttp = "^3.11.18"


[tool.poetry.group.dev.dependencies]
pytest-xdist = "^3.6.1"
pytest = "^8.3.4"
pytest-asyncio = "^0.26.0"
pytest-env = "^1.1.5"
httpx = "^0.28.1"
ruff = "^0.11.7"
taskipy = "^1.14.1"
coverage = "^7.7.1"
mypy = "^1.15.0"
com2ann = "^0.3.0"
faker = "^37.0.2"
python-dotenv = "^1.1.0"
aiosqlite = "^0.21.0"

[tool.taskipy.tasks]
lint = "ruff check --fix app/ test/ && mypy app/"
format = "ruff format app/ test/"
test = "pytest test -sn auto"
coverage = "coverage run --source=app -m pytest test -sn auto && coverage report -m"

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
warn_return_any = true
warn_unused_configs = true
strict = true
exclude = ["test/"]

[tool.ruff.lint]
extend-select = ["I"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
