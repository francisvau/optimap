"""Logs

Revision ID: 663c8cc84c5e
Revises: 5bd4f34f0c2e
Create Date: 2025-05-17 15:33:04.706228

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "663c8cc84c5e"
down_revision: Union[str, None] = "5bd4f34f0c2e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    logtype_enum = sa.Enum(
        "LIMITER", "UNAUTHORIZED", "FORBIDDEN", "DEFAULT", "ERROR", name="logtype"
    )
    logaction_enum = sa.Enum("CREATE", "UPDATE", "DELETE", "READ", name="logaction")

    logtype_enum.create(op.get_bind(), checkfirst=True)
    logaction_enum.create(op.get_bind(), checkfirst=True)

    op.add_column("logs", sa.Column("type", logtype_enum, nullable=False, server_default="DEFAULT"))
    op.add_column("logs", sa.Column("action", logaction_enum, nullable=True))
    op.add_column("logs", sa.Column("created_at", sa.DateTime(), nullable=False, server_default=sa.func.now()))
    op.add_column("logs", sa.Column("blueprint_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        None, "logs", "blueprints", ["blueprint_id"], ["id"], ondelete="SET NULL"
    )
    op.drop_column("logs", "timestamp")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "logs",
        sa.Column(
            "timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "logs", type_="foreignkey")
    op.drop_column("logs", "blueprint_id")
    op.drop_column("logs", "created_at")
    op.drop_column("logs", "action")
    op.drop_column("logs", "type")
    # ### end Alembic commands ###
